local player = game.Players.LocalPlayer    -- Needed for all local services with GUI
local playerGui = player:WaitForChild("PlayerGui")
local userInput = game:GetService("UserInputService")
local tweenService = game:GetService("TweenService")

local testGui = Instance.new("ScreenGui")
testGui.Name = "AdminX GUI "
testGui.Parent = playerGui

local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 400, 0, 300)  -- Size of the frame (Width, Height)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)  -- Centered position
mainFrame.BackgroundColor3 = Color3.fromRGB(0, 61, 153)  -- White background
mainFrame.BackgroundTransparency = 0.2  -- Set transparency for the frame (30% transparent)
mainFrame.Parent = testGui

local function makeRound(uiElement, cornerRadius)
    local uiCorner = Instance.new("UICorner")  -- Create a UICorner instance
    uiCorner.CornerRadius = UDim.new(0, cornerRadius)  -- Set the radius of the corners
    uiCorner.Parent = uiElement  -- Parent or make it belong to the UI element
end

makeRound(mainFrame, 30)

local dragging = false
local dragStart = nil
local startPosition = nil

local function makeDraggable(frame)
    -- When the user presses the mouse button down on the frame
    frame.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end  -- Ignore if the input is processed by other things

        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position  -- Start the drag with the current mouse position
            startPosition = frame.Position  -- Save the original position of the frame
        end
    end)

    -- When the user moves the mouse while dragging
    frame.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart  -- Get the difference between current and start position
            local newPosition = startPosition + UDim2.new(0, delta.X, 0, delta.Y)  -- Calculate the new position
            frame.Position = newPosition  -- Update the position of the frame
        end
    end)

    -- When the user releases the mouse button
    frame.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false  -- Stop dragging when the mouse button is released
        end
    end)
end

makeDraggable(mainFrame)

local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Text = "AdminX GUI"  -- Text displayed on the label
titleLabel.Font = Enum.Font.GothamBold  -- Font style
titleLabel.TextSize = 24  -- Font size
titleLabel.TextColor3 = Color3.fromRGB(0, 0, 0)  -- Black text color
titleLabel.BackgroundTransparency = 1  -- Fully transparent background
titleLabel.Size = UDim2.new(1, 0, 0, 50)  -- Full width of the frame, height of 50
titleLabel.Position = UDim2.new(0, 0, 0, 10)  -- Positioned at the top of the frame
titleLabel.Parent = mainFrame

local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 50, 0, 25)
CloseButton.Position = UDim2.new(0.28, -100, 0.3, -25)
CloseButton.Text = "X"
CloseButton.BackgroundTransparency = 0.5  -- Set transparency for the button (50% transparent)
CloseButton.Parent = mainFrame

makeRound(CloseButton, 15)

CloseButton.MouseButton1Click:Connect(function()   
    print("Button clicked!")
end)

local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Size = UDim2.new(0, 50, 0, 25)
MinimizeButton.Position = UDim2.new(0.41, -100, 0.3, -25)
MinimizeButton.Text = "-"
MinimizeButton.BackgroundTransparency = 0.5  -- Set transparency for the button (50% transparent)
MinimizeButton.Parent = mainFrame

makeRound(MinimizeButton, 15)
local isMinimized = false

CloseButton.Parent = titleLabel
MinimizeButton.Parent = titleLabel


local function toggleButtonsVisibility(visible)
    for _, child in pairs(mainFrame:GetChildren()) do
        -- Hide all buttons except for the Rejoin, Close, and Minimize buttons
        if child:IsA("TextButton") and child ~= rejoinButton and child ~= CloseButton and child ~= MinimizeButton then
            child.Visible = visible
        end
    end
end

MinimizeButton.MouseButton1Click:Connect(function()
    if not isMinimized then
        -- Minimize the frame
        local minimizeTween = tweenService:Create(mainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 400, 0, 50)
        })
        minimizeTween:Play()
        
        toggleButtonsVisibility(false)  -- Hide all buttons except Rejoin, Close, and Minimize buttons
        isMinimized = true
        MinimizeButton.Text = "+"
    else
        -- Expand the frame
        local expandTween = tweenService:Create(mainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 400, 0, 300)
        })
        expandTween:Play()
        
        toggleButtonsVisibility(true)  -- Show all buttons again
        isMinimized = false
        MinimizeButton.Text = "-"
    end
end)


local rejoinButton = Instance.new("TextButton")
rejoinButton.Size = UDim2.new(0, 50, 0, 25)
rejoinButton.Position = UDim2.new(1.17, -150, 0.01, 1)
rejoinButton.Text = "Rejoin"
rejoinButton.BackgroundTransparency = 0.5  -- Set transparency for the button (50% transparent)
rejoinButton.TextTransparency = 0.1  -- Optional: Adjust transparency of the button text
rejoinButton.Parent = mainFrame

makeRound(rejoinButton, 15)

rejoinButton.MouseButton1Click:Connect(function()   
        local Players = game:GetService("Players")
    local TeleportService = game:GetService("TeleportService")
    local PlaceId = game.PlaceId
    local JobId = game.JobId
    
    if #Players:GetPlayers() <= 1 then
        Players.LocalPlayer:Kick("\nRejoining...")
        wait()
        TeleportService:Teleport(PlaceId, Players.LocalPlayer)
    else
        TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Players.LocalPlayer)
    end
end)


local CommandsButton = Instance.new("TextButton")
CommandsButton.Size = UDim2.new(0, 125, 0, 25)
CommandsButton.Position = UDim2.new(1.15, -450, 0.2, 1)
CommandsButton.Text = "Toggle Chat Commands"
CommandsButton.BackgroundTransparency = 0.5  -- Set transparency for the button (50% transparent)
CommandsButton.TextTransparency = 0.1  -- Optional: Adjust transparency of the button text
CommandsButton.Parent = mainFrame

-- Simple notification function
local function sendNotification(title, text, duration)
    game.StarterGui:SetCore("SendNotification", {
        Title = title,      -- Title of the notification
        Text = text,        -- Text to display in the notification
        Duration = duration -- How long the notification will stay on screen (in seconds)
    })
end

CommandsButton.MouseButton1Click:Connect(function()   
    -- Load the script
    loadstring(game:HttpGet("https://raw.githubusercontent.com/396abc/Script/refs/heads/main/AdminXt"))()

    -- Show notification after button click
    sendNotification("HD Admin", "Chat commands have been toggled", 3)
end)
